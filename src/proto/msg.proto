// Spin RPC library, copyright 2015, 2016 Georg Brandl.
//
//! Protocol buffers: definition of message format sent over 0MQ.

enum DataType {
    Void   = 0;
    Bool   = 1;
    Double = 2;
    Float  = 3;
    Int32  = 4;
    Int64  = 5;
    UInt32 = 6;
    UInt64 = 7;
    String = 8;
    BoolArray	= 11;
    DoubleArray = 12;
    FloatArray	= 13;
    Int32Array	= 14;
    Int64Array	= 15;
    UInt32Array = 16;
    UInt64Array = 17;
    StringArray = 18;
    Int32StringArray  = 21;
    DoubleStringArray = 22;
}

message Value {
    required DataType vtype = 9;
    repeated bool   bool   = 1 [packed=true];
    repeated double double = 2 [packed=true];
    repeated float  float  = 3 [packed=true];
    repeated sint32 int32  = 4 [packed=true];
    repeated sint64 int64  = 5 [packed=true];
    repeated uint32 uint32 = 6 [packed=true];
    repeated uint64 uint64 = 7 [packed=true];
    repeated string string = 8;
}

message Error {
    required string reason = 1;
    required string desc = 2;
    required string origin = 3;
}

////////////////////////////////////////////////////////////////////////////////

message CommandDesc {
    required string name = 1;
    required string doc = 2;
    required DataType intype = 3;
    required DataType outtype = 4;
    required string indoc = 5;
    required string outdoc = 6;
}

message AttrDesc {
    required string name = 1;
    required string doc = 2;
    required DataType type = 3;
    required string unit = 4;
}

////////////////////////////////////////////////////////////////////////////////

enum ReqType {
    ReqPing = 0;
    ReqExecCommand = 1;
    ReqReadAttr = 2;
    ReqWriteAttr = 3;
    ReqQueryAPI = 10;
}

message Request {
    required uint32 seqno = 1;
    required ReqType rtype = 2;
    optional string name = 3;
    optional Value value = 4;
}

enum RespType {
    RespVoid = 0;
    RespError = 1;
    RespValue = 2;
    RespAPI = 3;
}

message Response {
    required uint32 seqno = 1;
    required RespType rtype = 2;
    optional Error error = 3;
    optional Value value = 5;
    repeated CommandDesc commands = 6;
    repeated AttrDesc attrs = 7;
}
