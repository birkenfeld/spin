// Spin RPC library, copyright 2015-2017 Georg Brandl.

//! Protocol buffers: definition of message format sent over 0MQ.

syntax = "proto2";

package spin_proto;

enum DataType {
    void   = 0;
    bool   = 1;
    double = 2;
    float  = 3;
    int32  = 4;
    int64  = 5;
    uint32 = 6;
    uint64 = 7;
    string = 8;
    byte_array = 9;
    bool_array = 10;
    double_array = 11;
    float_array	= 12;
    int32_array	= 13;
    int64_array	= 14;
    uint32_array = 15;
    uint64_array = 16;
    string_array = 17;
    int64_string_array  = 18;
    double_string_array = 19;
}

message BoolArray {
    repeated bool array = 1 [packed=true];
}

message DoubleArray {
    repeated double array = 1 [packed=true];
}

message FloatArray {
    repeated float array = 1 [packed=true];
}

message Int32Array {
    repeated sint32 array = 1 [packed=true];
}

message Int64Array {
    repeated sint64 array = 1 [packed=true];
}

message Uint32Array {
    repeated uint32 array = 1 [packed=true];
}

message Uint64Array {
    repeated uint64 array = 1 [packed=true];
}

message StringArray {
    repeated string array = 1;
}

message Int64StringArray {
    repeated sint64 intarray = 1 [packed=true];
    repeated string strarray = 2;
}

message DoubleStringArray {
    repeated double dblarray = 1 [packed=true];
    repeated string strarray = 2;
}

message Value {
    oneof val {
        bool bool = 2;
        double double = 3;
        float float = 4;
        sint32 int32 = 5;
        sint64 int64 = 6;
        uint32 uint32 = 7;
        uint64 uint64 = 8;
        string string = 9;
        bytes byte_array = 10;
        BoolArray bool_array = 11;
        DoubleArray double_array = 12;
        FloatArray float_array = 13;
        Int32Array int32_array = 14;
        Int64Array int64_array = 15;
        Uint32Array uint32_array = 16;
        Uint64Array uint64_array = 17;
        StringArray string_array = 18;
        Int64StringArray int64_string_array = 19;
        DoubleStringArray double_string_array = 20;
    }
}

message Error {
    required string reason = 1;
    required string desc = 2;
    required string origin = 3;
}

////////////////////////////////////////////////////////////////////////////////

message CmdDesc {
    required string   name = 1;
    required string   doc = 2;
    required DataType intype = 3;
    required DataType outtype = 4;
    required string   indoc = 5;
    required string   outdoc = 6;
}

message AttrDesc {
    required string   name = 1;
    required string   doc = 2;
    required DataType type = 3;
    required string   unit = 4;
}

message PropDesc {
    required string   name = 1;
    required string   doc = 2;
    required DataType type = 3;
    required Value    default = 4;
}

////////////////////////////////////////////////////////////////////////////////

message NameValue {
    required string name = 1;
    required Value value = 2;
}

message Request {
    required uint32 seqno = 1;
    oneof req_type {
        NameValue exec_cmd = 3;
        string read_attr = 4;
        NameValue write_attr = 5;
        string get_prop = 6;
        NameValue set_prop = 7;
        uint32 query_api = 8;
    }
}

message ApiDesc {
    repeated CmdDesc cmds = 1;
    repeated AttrDesc attrs = 2;
    repeated PropDesc props = 3;
}

message Response {
    required uint32 seqno = 1;
    oneof rsp_type {
        Error error = 3;
        Value value = 4;
        ApiDesc api_desc = 5;
    }
}
